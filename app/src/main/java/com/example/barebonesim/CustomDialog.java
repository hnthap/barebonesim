package com.example.barebonesim;

import java.awt.Component;

import javax.swing.JOptionPane;

public enum CustomDialog {

    STORE_PROP_FAILED,
    OVERWRITE_EXISTING_FILE, CLOSE_UNSAVED_FILE,
    EXISTING_VAR_NAME, INVALID_VAR_NAME, NEGATIVE_VALUE, NON_INTEGER_VALUE,
    NO_INPUT,
    INVALID_CSV,
    TIME_LIMIT_EXCEEDED,
    UNDER_CONSTRUCTION;

    public Object show(Component component, Object arg1) {
        if (this == STORE_PROP_FAILED) {
            assert arg1 instanceof Exception;
            Exception e = (Exception) arg1;
            JOptionPane.showMessageDialog(component,
                "Failed to store to properties file.\n" + e.getMessage(),
                e.getClass().getSimpleName(),
                JOptionPane.WARNING_MESSAGE);

        } else if (this == OVERWRITE_EXISTING_FILE) {
            assert arg1 == null;
            return JOptionPane.showConfirmDialog(component, 
                "Are you sure?\n" +
                "You're about to overwrite an existing file " +
                "and may lose you data.", 
                "Existing file", JOptionPane.YES_NO_CANCEL_OPTION);

        } else if (this == CLOSE_UNSAVED_FILE) {
            assert arg1 == null;
            return JOptionPane.showConfirmDialog(component, 
                "Your code is unsaved.\nSave before closing?",
                "Unsaved", JOptionPane.YES_NO_OPTION);

        } else if (this == EXISTING_VAR_NAME) {
            assert arg1 instanceof String;
            String varName = (String) arg1;
            JOptionPane.showMessageDialog(component, 
                "Variable name already exists! (" + varName + ")",
                "Invalid Name", JOptionPane.WARNING_MESSAGE);

        } else if (this == INVALID_VAR_NAME) {
            assert arg1 instanceof String;
            String varName = (String) arg1;
            JOptionPane.showMessageDialog(component,
                "Invalid variable name! (\"" + varName + "\")",
                "Invalid Name", JOptionPane.WARNING_MESSAGE);

        } else if (this == NEGATIVE_VALUE) {
            assert arg1 == null;
            JOptionPane.showMessageDialog(component,
                "The value cannot be negative!", "Invalid Value",
                JOptionPane.WARNING_MESSAGE);

        } else if (this == NON_INTEGER_VALUE) {
            assert arg1 == null;
            JOptionPane.showMessageDialog(component, 
                "The value must be an integer!", "Invalid Value",
                JOptionPane.WARNING_MESSAGE);

        } else if (this == NO_INPUT) {
            assert arg1 == null;
            JOptionPane.showMessageDialog(component,
                "There is no input at all.", "Cannot Change Anything",
                JOptionPane.WARNING_MESSAGE);
        
        } else if (this == INVALID_CSV) {
            assert arg1 == null;
            JOptionPane.showMessageDialog(component, 
                "You SHOULD only choose a CSV file generated by this app.", 
                "Maybe Invalid", 
                JOptionPane.WARNING_MESSAGE);
        
        } else if (this == TIME_LIMIT_EXCEEDED) {
            assert arg1 instanceof Integer;
            JOptionPane.showMessageDialog(component,
                "[Suggestion] You may need to fix an infinite loop.",
                String.format("Time Limit Exceeded (%d ms)", (int) arg1),
                JOptionPane.WARNING_MESSAGE);
        
        } else if (this == UNDER_CONSTRUCTION) {
            assert arg1 instanceof String;
            JOptionPane.showMessageDialog(component,
                String.format("The command \"%s\" is under construction.",
                (String)arg1), "UNDER CONSTRUCTION",
                JOptionPane.WARNING_MESSAGE);

        }
        return null;
    }
    
}
