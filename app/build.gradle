/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'

    // Apache Commons Langs 3.12.0
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    // Apache Commons CSV 1.10.0
    implementation 'org.apache.commons:commons-csv:1.10.0'
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.barebonesim.App'
}

jar {
    manifest {
        attributes (
            'Main-Class': 'com.example.barebonesim.App',
        )
    }
    from {
        configurations
            .runtimeClasspath
            .collect {
                it.isDirectory() ? it : zipTree(it)
            }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn ('dependencies')
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
